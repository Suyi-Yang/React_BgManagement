[{"D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\App.js":"1","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\index.js":"2","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\login\\login.jsx":"3","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\api\\ajax.js":"4","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\api\\index.js":"5","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\utils\\memoryUtils.js":"6","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\admin\\admin.jsx":"7","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\utils\\storageUtils.js":"8","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\components\\left-nav\\index.jsx":"9","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\components\\header\\index.jsx":"10","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\home\\home.jsx":"11","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\category\\category.jsx":"12","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\product\\product.jsx":"13","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\line\\line.jsx":"14","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\user\\user.jsx":"15","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\pie\\pie.jsx":"16","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\config\\menuConfig.js":"17","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\utils\\dateUtils.js":"18","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\components\\link-btn\\index.jsx":"19","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\category\\Updatecategory.jsx":"20","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\role\\role.jsx":"21","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\category\\Addcategory.jsx":"22","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\product\\detail.jsx":"23","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\product\\home.jsx":"24","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\utils\\constants.js":"25","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\product\\add-update.jsx":"26","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\product\\pictures-wall.jsx":"27","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\bar\\bar.jsx":"28","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\product\\rich-text-editor.jsx":"29","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\category\\AddCategory.jsx":"30","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\category\\UpdateCategory.jsx":"31","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\role\\AddRole.jsx":"32","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\role\\UpdateRole.jsx":"33","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\user\\user-form.jsx":"34","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\redux\\reducer.js":"35","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\redux\\store.js":"36","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\redux\\actions.js":"37","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\redux\\action-type.js":"38"},{"size":533,"mtime":1611625858147,"results":"39","hashOfConfig":"40"},{"size":342,"mtime":1612587674212,"results":"41","hashOfConfig":"40"},{"size":3858,"mtime":1612586193640,"results":"42","hashOfConfig":"40"},{"size":1114,"mtime":1612432854147,"results":"43","hashOfConfig":"40"},{"size":4293,"mtime":1612359880820,"results":"44","hashOfConfig":"40"},{"size":116,"mtime":1612432854188,"results":"45","hashOfConfig":"40"},{"size":1974,"mtime":1612586503620,"results":"46","hashOfConfig":"40"},{"size":655,"mtime":1611662070932,"results":"47","hashOfConfig":"40"},{"size":4915,"mtime":1612587338177,"results":"48","hashOfConfig":"40"},{"size":3672,"mtime":1612587176885,"results":"49","hashOfConfig":"40"},{"size":246,"mtime":1612432854163,"results":"50","hashOfConfig":"40"},{"size":5536,"mtime":1612511024969,"results":"51","hashOfConfig":"40"},{"size":675,"mtime":1612076245178,"results":"52","hashOfConfig":"40"},{"size":178,"mtime":1611721065135,"results":"53","hashOfConfig":"40"},{"size":6418,"mtime":1612432854187,"results":"54","hashOfConfig":"40"},{"size":173,"mtime":1611721086898,"results":"55","hashOfConfig":"40"},{"size":1511,"mtime":1612431472525,"results":"56","hashOfConfig":"40"},{"size":924,"mtime":1612432854188,"results":"57","hashOfConfig":"40"},{"size":194,"mtime":1612432854154,"results":"58","hashOfConfig":"40"},{"size":2061,"mtime":1612319974401,"results":"59","hashOfConfig":"40"},{"size":4247,"mtime":1612587606834,"results":"60","hashOfConfig":"40"},{"size":2456,"mtime":1612319968020,"results":"61","hashOfConfig":"40"},{"size":3264,"mtime":1612153036701,"results":"62","hashOfConfig":"40"},{"size":4679,"mtime":1612432854175,"results":"63","hashOfConfig":"40"},{"size":307,"mtime":1612403318757,"results":"64","hashOfConfig":"40"},{"size":9210,"mtime":1612432854174,"results":"65","hashOfConfig":"40"},{"size":4654,"mtime":1612432854179,"results":"66","hashOfConfig":"40"},{"size":176,"mtime":1612432854159,"results":"67","hashOfConfig":"40"},{"size":2800,"mtime":1612432854181,"results":"68","hashOfConfig":"40"},{"size":2456,"mtime":1612511009495,"results":"69","hashOfConfig":"40"},{"size":2061,"mtime":1612511014990,"results":"70","hashOfConfig":"40"},{"size":1594,"mtime":1612432854182,"results":"71","hashOfConfig":"40"},{"size":2015,"mtime":1612432854182,"results":"72","hashOfConfig":"40"},{"size":3108,"mtime":1612432854186,"results":"73","hashOfConfig":"40"},{"size":1358,"mtime":1612586973702,"results":"74","hashOfConfig":"40"},{"size":372,"mtime":1612513809355,"results":"75","hashOfConfig":"40"},{"size":1559,"mtime":1612586858581,"results":"76","hashOfConfig":"40"},{"size":386,"mtime":1612586725980,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"dqx17m",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"122"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\App.js",[],["171","172"],"D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\index.js",[],"D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\login\\login.jsx",["173"],"/* 用户登录的路由组件 */\r\nimport React, { Component } from 'react'\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Form, Input, Button, message } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\n\r\nimport './login.less' /* 引入login.less */\r\nimport logo from '../../assets/images/logo.png' /* 引入logo图片 */\r\n// import {reqLogin} from '../../api'\r\n// import memoryUtils from '../../utils/memoryUtils'\r\n// import storageUtils from '../../utils/storageUtils'\r\nimport { login } from \"../../redux/actions\";\r\n\r\nclass Login extends Component {\r\n  validatePwd = (rule,value)=>{\r\n    if (!value) {\r\n      return Promise.reject('密码必须输入');\r\n    }else if(value.length < 4){\r\n      return Promise.reject('密码长度不能小于4位');\r\n    }else if(value.length > 12){\r\n      return Promise.reject('密码长度不能大于12位');\r\n    }else if(!/^[a-zA-Z0-9_]+$/.test(value)){\r\n      return Promise.reject('密码必须是英文、数字或下划线组成');\r\n    }else{\r\n      return Promise.resolve(); // 验证通过\r\n    }\r\n  }\r\n\r\n  onFinish = (values) => {\r\n    const {username,password} = values    \r\n    // 调用分发异步action的函数=>发登录的异步请求=>更新状态\r\n    this.props.login(username,password)    \r\n  };\r\n\r\n  render() {\r\n    //(刷新页面时)如果用户已经登录 则自动跳转到管理界面(即不会进入登录页面)\r\n    const user = this.props.user\r\n    if(user && user._id){\r\n      return <Redirect to='/home'/> //如果登陆成功 跳转到首页\r\n    }\r\n    return (\r\n      <div className='login'>\r\n        <header className='login-header'>\r\n          <img src={logo} alt=\"logo\" />\r\n          <h1>React项目：后台管理系统</h1>\r\n        </header>\r\n        <section className='login-content'>          \r\n          <h2>用户登录</h2>\r\n          <Form name=\"normal_login\" className=\"login-form\" onFinish={this.onFinish}>\r\n            <Form.Item name=\"username\" rules={[ /* 声明式验证:直接使用别人定义好的验证规则进行验证 */\r\n                {required: true, message: '用户名必须输入'},\r\n                {min: 4, message: '用户名至少4位'},\r\n                {max: 12, message: '用户名最多12位'},\r\n                {pattern: /^[a-zA-Z0-9_]+$/, message: '用户名必须是英文、数字或下划线组成'}\r\n                /* 正则：[a-zA-Z0-9_]:匹配一个字符；[...]+:匹配多个字符 */\r\n              ]} initialValue='admin' /* initialValue指定初始值 */ >\r\n              <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"用户名\" />\r\n            </Form.Item>\r\n            <Form.Item name=\"password\" rules={[{validator: this.validatePwd}]}>             \r\n              <Input prefix={<LockOutlined className=\"site-form-item-icon\" />} type=\"password\" placeholder=\"密码\" />\r\n            </Form.Item>            \r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">登录</Button>\r\n            </Form.Item>            \r\n          </Form>\r\n          {/* 如果登录失败 显示错误信息 */}\r\n          <span style={{float:'right',color:'red'}}>{user.errorMsg}</span>\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default connect(\r\n  state => ({user:state.user}),\r\n  {login}\r\n)(Login)\r\n\r\n/* \r\n  async和await\r\n    1.作用？\r\n      简化promise对象的使用：不用再使用then()来指定成功/失败的回调函数\r\n      以同步编码(没有回调函数了)方式实现异步流程\r\n    2.哪里写await？\r\n      在返回promise的表达式左侧写await\r\n        ---不想要promise，想要的是promise异步执行的 成功的 value数据\r\n    3.哪里写async？\r\n      await所在函数(最近的)定义的左侧写async\r\n*/","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\api\\ajax.js",[],["174","175"],"D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\api\\index.js",[],["176","177"],"D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\utils\\memoryUtils.js",["178"],"D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\admin\\admin.jsx",[],"D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\utils\\storageUtils.js",["179"],"/* 进行local数据存储管理的工具模块 */\r\nimport store from 'store'\r\n\r\nconst USER_KEY = 'user_key'\r\nexport default {  \r\n  saveUser(user){ //保存user\r\n    store.set(USER_KEY, user)\r\n  },  \r\n  getUser(){ //读取user\r\n    return store.get(USER_KEY) || {}\r\n  },  \r\n  removeUser(){ //删除user\r\n    store.remove(USER_KEY)\r\n  }\r\n}\r\n\r\n//原生写法\r\n/* export default {  \r\n  saveUser(user){ //保存user\r\n    localStorage.setItem(USER_KEY, JSON.stringify(user))\r\n  },  \r\n  getUser(){ //读取user\r\n    return JSON.parse(localStorage.getItem(USER_KEY) || '{}')\r\n  },  \r\n  removeUser(){ //删除user\r\n    localStorage.removeItem(USER_KEY)\r\n  }\r\n} */",["180","181"],"D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\components\\left-nav\\index.jsx",["182"],"/* 左侧导航的组件 */\r\nimport React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { Menu } from 'antd';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport logo from '../../assets/images/logo.png'\r\nimport menuList from '../../config/menuConfig'\r\nimport memoryUtils from \"../../utils/memoryUtils\"\r\nimport './index.less'\r\nimport { setHeadTitle } from \"../../redux/actions\";\r\n\r\nconst { SubMenu } = Menu;\r\nclass LeftNav extends Component {\r\n  //判断当前登录的用户对item是否有权限\r\n  hasAuth = (item)=>{\r\n    const {key,isPublic} = item\r\n    const menus = this.props.user.role.menus\r\n    const username = this.props.user.username\r\n    /* 显示菜单项的情况： \r\n      1.用户是admin(管理员)\r\n      2.当前item是公开的(isPublic为true)\r\n      3.当前用户有此item的权限(item的key 在role的权限menus中) */\r\n    if(username==='admin'||isPublic||menus.indexOf(key)!==-1){\r\n      return true\r\n    }else if(item.children){\r\n      return !!item.children.find(child => menus.indexOf(child.key)!==-1)\r\n    }\r\n    return false\r\n  }\r\n  \r\n  /* 根据menu的[数据数组] 生成对应的[标签数组] */\r\n  /* 方法1：使用map() + 递归调用 */\r\n  /* getMenuNodesMap = (menuList)=>{\r\n    return menuList.map(item => {\r\n      if(!item.children){ //没有子菜单列表时\r\n        return (\r\n          <Menu.Item key={item.key} icon={item.icon}>\r\n            <Link to={item.key} onClick={()=>this.props.setHeadTitle(item.title)}>\r\n              {item.title}\r\n            </Link>            \r\n          </Menu.Item>\r\n        )\r\n      }else{ //有子菜单列表时\r\n        return ( //递归调用:遍历子项\r\n          <SubMenu key={item.key} icon={item.icon} title={item.title}>\r\n            {this.getMenuNodes(item.children)}\r\n          </SubMenu>\r\n        )\r\n      }\r\n    })\r\n  } */\r\n  /* 方法2：使用reduce() + 递归调用 */\r\n  getMenuNodes = (menuList)=>{\r\n    const path = this.props.location.pathname //得到当前请求的路由路径\r\n    return menuList.reduce((pre,item)=>{\r\n      //如果当前用户有item对应的权限 才显示对应的菜单项\r\n      if(this.hasAuth(item)){\r\n        if(!item.children){\r\n          //判断[当前遍历的item]是否为[当前path]对应的item\r\n          if(item.key===path || path.indexOf(item.key)===0){\r\n            //更新redux中headTitle的状态\r\n            this.props.setHeadTitle(item.title)\r\n          }\r\n          pre.push(( //没有子菜单列表时 向pre中添加<Menu.Item>\r\n            <Menu.Item key={item.key} icon={item.icon}>\r\n              <Link to={item.key} onClick={()=>this.props.setHeadTitle(item.title)}>\r\n                {item.title}\r\n              </Link>            \r\n            </Menu.Item>\r\n          ))\r\n        }else{\r\n          //查找一个与[当前请求路径]匹配的子Item\r\n          const cItem = item.children.find(cItem => path.indexOf(cItem.key)===0)\r\n          if(cItem){ //如果存在 则当前item的子列表需要打开          \r\n            this.openKey = item.key\r\n          }\r\n          pre.push(( //有子菜单列表时 向pre中添加<SubMenu>\r\n            <SubMenu key={item.key} icon={item.icon} title={item.title}>\r\n              {this.getMenuNodes(item.children)} {/* 递归调用:遍历子项 */}\r\n            </SubMenu>\r\n          ))\r\n        }\r\n      }\r\n      return pre //返回生成的[标签数组]\r\n    }, [])\r\n  }\r\n\r\n  /* 在第一次render()之前执行一次\r\n      为第一次render()准备数据(必须是同步的 而非异步的) */\r\n  // componentWillMount(){ //不建议使用componentWillMount 将要弃用\r\n  UNSAFE_componentWillMount(){ //使用\"UNSAFE_\"以禁止控制台警告\r\n    this.menuNodes = this.getMenuNodes(menuList)\r\n  }\r\n\r\n  render(){\r\n    let path = this.props.location.pathname //得到当前请求的路由路径\r\n    if(path.indexOf('/product')===0){ //当前请求的是商品或其子路由界面\r\n      path = '/product'\r\n    }\r\n    const openKey = this.openKey //得到需要打开子菜单项的key\r\n    return (\r\n      <div className='left-nav'>\r\n        <Link to='/' className='left-nav-header'>\r\n          <img src={logo} alt=\"logo\"/>\r\n          <h1>硅谷后台</h1>\r\n        </Link>\r\n        <Menu\r\n          selectedKeys={[path]} //selectedKeys:当前选中的菜单项key数组                    \r\n          defaultOpenKeys={[openKey]}\r\n          mode=\"inline\"\r\n          theme=\"dark\"\r\n        >\r\n          {this.menuNodes}\r\n        </Menu>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n/* withRouter高阶组件：\r\n    包装非路由组件(LeftNav) 返回一个新的组件\r\n    新的组件 向非路由组件传递3个属性:history/location/match */\r\n/* UI组件 */\r\n// export default withRouter(LeftNav)\r\n/* 生成容器组件 */\r\nexport default connect(\r\n  state => ({user: state.user}), //一般属性\r\n  {setHeadTitle} //函数属性\r\n)(withRouter(LeftNav))","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\components\\header\\index.jsx",["183","184"],"D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\home\\home.jsx",[],"D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\category\\category.jsx",[],"D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\product\\product.jsx",[],"D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\line\\line.jsx",[],"D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\user\\user.jsx",[],"D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\pie\\pie.jsx",[],["185","186"],"D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\config\\menuConfig.js",[],"D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\utils\\dateUtils.js",[],["187","188"],"D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\components\\link-btn\\index.jsx",[],"D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\category\\Updatecategory.jsx",[],"D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\role\\role.jsx",[],"D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\category\\Addcategory.jsx",[],"D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\product\\detail.jsx",[],["189","190"],"D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\product\\home.jsx",[],"D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\utils\\constants.js",[],"D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\product\\add-update.jsx",["191"],"/* Product的[添加和更新的]子路由组件 */\r\nimport React, { Component } from \"react\";\r\nimport { Card, Form, Input, Button, Cascader, message } from \"antd\";\r\nimport { ArrowLeftOutlined } from '@ant-design/icons';\r\n\r\nimport LinkButton from '../../components/link-btn'\r\nimport PicturesWall from \"./pictures-wall\";\r\nimport RichTextEditor from \"./rich-text-editor\";\r\nimport {reqCategorys,reqAddOrUpdateProduct} from '../../api'\r\n\r\nexport default class ProductAddUpdate extends Component {\r\n  state = {\r\n    options: [], //一级列表项\r\n  }\r\n  constructor(props){\r\n    super(props)\r\n    //创建用来保存ref标识的标签对象的容器\r\n    this.pw = React.createRef() //商品图片\r\n    this.editor = React.createRef() //商品详情\r\n  }\r\n  //【分类】初始化选项列表(一级)\r\n  initOptions = async (categorys)=>{\r\n    //根据categorys生成options的数组\r\n    const options = categorys.map(c=>({\r\n      value: c._id,\r\n      label: c.name,\r\n      isLeaf: false, //不是叶子(即不是最后一级)\r\n    }))\r\n\r\n    //【修改商品】[二级分类商品]的[更新]\r\n    const {isUpdate,product} = this\r\n    const {pCategoryId} = product\r\n    if(isUpdate && pCategoryId!=='0'){ //如果是一个[二级分类商品]的[更新]\r\n      //获取对应的二级分类列表\r\n      const subCategorys = await this.getCategorys(pCategoryId)\r\n      //生成二级下拉列表的options\r\n      const childOptions = subCategorys.map(c=>({\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true\r\n      }))\r\n      //找到当前商品对应的一级option对象\r\n      const targetOption = options.find(option => option.value===pCategoryId)\r\n      //关联到对应的一级option上\r\n      targetOption.children = childOptions\r\n    }\r\n\r\n    //更新options的状态\r\n    this.setState({options})\r\n  }\r\n  //【分类】异步获取一级/二级分类列表 并显示\r\n  getCategorys = async (parentId)=>{\r\n    const result = await reqCategorys(parentId) //{status:0,data:categorys}\r\n    if(result.status===0){\r\n      const categorys = result.data\r\n      if(parentId==='0'){ //一级分类列表\r\n        this.initOptions(categorys) //初始化选项列表(一级) 并显示\r\n      }else{ //二级分类列表\r\n        return categorys //返回二级列表的categorys\r\n        /* 当前async函数返回的promise会成功 且value为categorys */\r\n      }\r\n    }\r\n  }\r\n  //【分类】选项变化\r\n  onChange = (value, selectedOptions) => {\r\n    // console.log(value, selectedOptions);\r\n  };\r\n  //【分类】用于加载下一级列表的回调函数\r\n  loadData = async selectedOptions => {\r\n    const {options} = this.state\r\n    const targetOption = selectedOptions[0]; //选中的option对象\r\n    targetOption.loading = true; //显示loading\r\n\r\n    //根据选中的一级分类 请求获取对应的二级分类列表\r\n    const subCategorys = await this.getCategorys(targetOption.value)\r\n    targetOption.loading = false; //隐藏loading\r\n    if(subCategorys && subCategorys.length>0){ //如果二级分类数组有数据 且数量大于0\r\n      //生成一个二级列表的options\r\n      const childOptions = subCategorys.map(c=>({\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true, //是叶子(即是最后一级)\r\n      }))\r\n      //关联到上一级的option上\r\n      targetOption.children = childOptions //二级列表项\r\n    }else{ //如果没有二级列表\r\n      targetOption.isLeaf = true //则是叶子 不显示箭头\r\n    }\r\n    this.setState({options:[...options]}) //更新options状态    \r\n  };\r\n\r\n  //【提交】表单\r\n  onFinish = async (values) => {\r\n    // console.log(values); //查看方法本身能收集到的数据values\r\n    //【1】收集数据\r\n    //获取[商品图片]的数据\r\n    const imgs = this.pw.current.getImgs()\r\n    values.product.imgs = imgs\r\n    //获取[商品详情]的数据    \r\n    const detail = this.editor.current.getDetail()\r\n    values.product.detail = detail\r\n    //获取[分类id]的数据\r\n    const {categoryIds} = values.product\r\n    let pCategoryId,categoryId\r\n    if(categoryIds.length===1){ //如果categoryIds中只有一个数据\r\n      pCategoryId = '0' //则父id为0 即一级分类列表\r\n      categoryId = categoryIds[0] //此数据为:当前分类id\r\n    }else{ //如果categoryIds中有两个数据\r\n      pCategoryId = categoryIds[0] //第一个数据:父id\r\n      categoryId = categoryIds[1] //第二个数据:当前分类id\r\n    }\r\n    values.product.pCategoryId = pCategoryId //将父id添加到product对应属性上\r\n    values.product.categoryId = categoryId //将分类id添加到product对应属性上\r\n    //获取[_id]的数据\r\n    if(this.isUpdate){ //如果是【修改分类】才需要添加_id属性(【添加分类】不需要该属性)\r\n      values.product._id = this.product._id\r\n    }    \r\n    console.log(values); //查看自定义方法后 可收集到的数据values\r\n\r\n    //【2】调用接口请求函数去[添加/修改]\r\n    const result = await reqAddOrUpdateProduct(values.product)\r\n\r\n    //【3】根据结果 显示提示信息\r\n    if(result.status===0){\r\n      message.success(`${this.isUpdate ? '修改':'添加'}商品成功！`)\r\n      this.props.history.goBack()\r\n    }else{\r\n      message.error(`${this.isUpdate ? '修改':'添加'}商品失败！`)\r\n    }\r\n  };\r\n\r\n  UNSAFE_componentWillMount(){\r\n    //取出携带的state\r\n    const product = this.props.location.state //如果是[添加商品]则没有值 否则有值\r\n    //保存[是否为'修改商品']的标识\r\n    this.isUpdate = !!product //!product:取反变成布尔值 !!product:再次取反 变为原值\r\n    //取出当前product 保存到this中(如果没有则保存的是{})\r\n    this.product = product || {}\r\n  }\r\n  componentDidMount(){\r\n    this.getCategorys('0') //请求一级分类列表\r\n  }\r\n\r\n  render() {\r\n    const {isUpdate, product} = this\r\n    const {pCategoryId,categoryId,imgs,detail} = product\r\n    const categoryIds = [] //接收级联分类ID的数组\r\n    if(isUpdate){ //【修改商品】\r\n      if(pCategoryId==='0'){ //如果商品是一级分类\r\n        categoryIds.push(categoryId) //只显示当前商品分类\r\n      }else{ //如果商品是二级分类\r\n        categoryIds.push(pCategoryId) //当前商品分类 父级的id\r\n        categoryIds.push(categoryId) //当前商品分类 自身的id\r\n      }\r\n    }\r\n    const {options} = this.state\r\n\r\n    const title = (\r\n      <LinkButton onClick={() => this.props.history.goBack()}>\r\n        <ArrowLeftOutlined style={{ marginRight: 10, color: '#1DA57A' }} />\r\n        {isUpdate ? '修改商品' : '添加商品'}\r\n      </LinkButton>)\r\n\r\n    //指定Form布局的配置对象\r\n    const layout = {\r\n      labelCol: {span: 4,}, //左侧label的宽度\r\n      wrapperCol: {span: 12,}, //右侧包裹的宽度\r\n    };\r\n    const validateMessages = {required: '${label}必须输入！',};\r\n\r\n    return (\r\n      <Card title={title} className='product-subpage-title'>\r\n        <Form {...layout} name=\"addupdateProduct\" onFinish={this.onFinish} \r\n          validateMessages={validateMessages} \r\n          initialValues={{ \r\n            product:{\r\n              name: product.name,\r\n              desc: product.desc,\r\n              price: product.price,\r\n              categoryIds: categoryIds,\r\n              imgs: product.imgs,\r\n              detail: product.detail,\r\n            }\r\n          }}\r\n        >\r\n          <Form.Item name={['product', 'name']} label=\"商品名称\" rules={[{required: true,},]}>\r\n            <Input placeholder='输入商品名称'/>\r\n          </Form.Item>\r\n          <Form.Item name={['product', 'desc']} label=\"商品描述\" rules={[{required: true,},]}>\r\n            <Input.TextArea placeholder='输入商品描述' autoSize={{minRows:2,maxRows:6}} allowClear={true}/>\r\n          </Form.Item>\r\n          <Form.Item name={['product', 'price']} label=\"商品价格\"\r\n           rules={[\r\n             {required: true,},\r\n             {validator: (_, value) => value>0 ? Promise.resolve() : Promise.reject('商品价格必须大于0'),}\r\n           ]}>\r\n            <Input placeholder='输入商品价格' type='number' addonAfter=\"元\"/>\r\n          </Form.Item>\r\n          <Form.Item name={['product', 'categoryIds']} label=\"商品分类\" rules={[{required: true,},]}>\r\n            <Cascader placeholder={'选择商品分类'}\r\n              options={options} loadData={this.loadData} onChange={this.onChange} changeOnSelect />\r\n            {/* options：需要显示的列表数据数组\r\n            loadData(实现动态加载选项)：选择某个列表项时 加载下一集列表的监听回调 */}\r\n          </Form.Item>\r\n          <Form.Item name={['product', 'imgs']} label=\"商品图片\">\r\n            <PicturesWall ref={this.pw} imgs={imgs} />\r\n          </Form.Item>\r\n          <Form.Item name={['product', 'detail']} label=\"商品详情\">\r\n            <RichTextEditor ref={this.editor} detail={detail}/>\r\n          </Form.Item>\r\n          <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 4 }}>\r\n            <Button type=\"primary\" htmlType=\"submit\">提交</Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Card>\r\n    )\r\n  }\r\n}","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\product\\pictures-wall.jsx",[],["192","193"],"D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\bar\\bar.jsx",[],["194","195"],"D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\product\\rich-text-editor.jsx",[],"D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\category\\AddCategory.jsx",[],"D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\category\\UpdateCategory.jsx",[],"D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\role\\AddRole.jsx",[],"D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\role\\UpdateRole.jsx",[],["196","197"],"D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\pages\\user\\user-form.jsx",["198","199"],"/* 创建/修改用户 */\r\nimport React,{ Component } from \"react\";\r\nimport { Form, Input, Select } from 'antd';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class UserAddUpdate extends Component {\r\n  static propTypes = { //声明接收(可以不进行说明接收 但做了更好)\r\n    roles: PropTypes.array.isRequired,\r\n    addOrUpdateUsers: PropTypes.func.isRequired,\r\n    user: PropTypes.object\r\n  } \r\n  //从props属性中拿到父组件传递的方法\r\n  addOrUpdateUsers = this.props.addOrUpdateUsers\r\n  //创建一个Ref 指定给form\r\n  formRef = React.createRef();\r\n\r\n  addUser = ()=>{\r\n    const form = this.formRef.current\r\n    form.validateFields().then((values) => { //成功(验证form数据)\r\n      //从form的values中拿到user数据 传递到父组件方法中发送请求\r\n      this.addOrUpdateUsers(values.user)\r\n      form.resetFields(); //清空输入的缓存\r\n    }).catch((info) => { //失败(验证form数据)\r\n      console.log('Validate Failed:', info);\r\n    });\r\n  }\r\n  resetForm = ()=>{ //清空表单缓存数据\r\n    this.formRef.current.resetFields() //重置form数据\r\n  }\r\n  showUser = (user)=>{ //根据当前选中的user 显示对应数据\r\n    this.formRef.current.setFieldsValue({\r\n      user: {\r\n        username: user.username,\r\n        password: user.password,\r\n        phone: user.phone,\r\n        email: user.email,\r\n        role_id: user.role_id,\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {roles,user} = this.props\r\n    return (\r\n      <>       \r\n        <Form name=\"basic\" ref={this.formRef}\r\n          labelCol={{span: 5}} wrapperCol={{span: 16}}\r\n          requiredMark={false} //是否显示[必选样式(*)] false则不显示(*)\r\n          validateMessages={{\r\n            required: '${label}为必填项!',\r\n            types: { email: '请填写一个有效的${label}!', },\r\n          }}\r\n        >\r\n          <Form.Item name={['user', 'username']} label=\"用户名\" rules={[{required: true,},]}>\r\n            <Input placeholder='请输入用户名'/>\r\n          </Form.Item>\r\n          { //【修改用户】不显示密码input,【创建用户】显示密码input\r\n            user._id ? null : (\r\n            <Form.Item name={['user', 'password']} label=\"密码\" rules={[{required: true,},]}>\r\n              <Input.Password placeholder='请输入密码'/>\r\n            </Form.Item>)\r\n          }\r\n          <Form.Item name={['user', 'phone']} label=\"手机号\" rules={[{required: true,},]}>\r\n            <Input placeholder='请输入用手机号'/>\r\n          </Form.Item>\r\n          <Form.Item name={['user', 'email']} label=\"邮箱\" rules={[{type: 'email',required: true,},]}>\r\n            <Input placeholder='请输入邮箱'/>\r\n          </Form.Item>\r\n          <Form.Item name={['user', 'role_id']} label=\"角色\" rules={[{required: true,},]}>\r\n            <Select placeholder='请选择角色' /* defaultValue=\"manager\" */>\r\n              {roles.map((role)=><Select.Option key={role._id} value={role._id}>{role.name}</Select.Option>)}\r\n            </Select>\r\n          </Form.Item>\r\n        </Form>\r\n      </>\r\n    );\r\n  }\r\n}",["200","201"],"D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\redux\\reducer.js",[],"D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\redux\\store.js",[],"D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\redux\\actions.js",["202"],"/* 包含n个action creator函数的模块\r\n同步action：对象 {type:'xxx', data:数据值}\r\n异步action：函数 dispatch=>{} */\r\nimport { SET_HEAD_TITLE,RECEIVE_USER,SHOW_ERROR_MSG,RESET_USER } from \"./action-type\";\r\nimport { reqLogin } from \"../api\";\r\nimport storageUtils from \"../utils/storageUtils\";\r\nimport { message } from \"antd\";\r\n\r\n//设置头部标题的同步action\r\nexport const setHeadTitle = (headTitle)=>({type:SET_HEAD_TITLE, data:headTitle})\r\n\r\n//接收用户信息的同步action\r\nexport const receiveUser = (user)=>({type:RECEIVE_USER, user})\r\n//显示错误信息的同步action\r\nexport const showErrorMsg = (errorMsg)=>({type:SHOW_ERROR_MSG, errorMsg})\r\n//登录的异步action\r\nexport const login = (username,password)=>{\r\n  return async dispatch=>{\r\n    //1.执行异步ajax请求\r\n    const result = await reqLogin(username,password)    \r\n    if(result.status===0){ //2-1.成功{status:0, data:user}:分发成功的同步action \r\n      const user = result.data\r\n      storageUtils.saveUser(user) //将user保存到local中\r\n      dispatch(receiveUser(user)) //将user保存到状态内存中(分发[接收用户信息]的同步action)\r\n    }else{ //2-2.失败{status:1, msg:'xxx'}:分发失败的同步action \r\n      const msg = result.msg\r\n      // message.error(msg) //之前的做法\r\n      dispatch(showErrorMsg(msg)) //使用dispatch的做法\r\n    }    \r\n  }\r\n}\r\n//退出登录的同步action\r\nexport const logout = ()=>{\r\n  storageUtils.removeUser() //删除local中的user\r\n  return {type:RESET_USER} //返回action对象\r\n}","D:\\Personal\\FrontendStudy\\ExercisesWithVSCode\\Part_4\\02_ProjBgManagement\\react-admin_client\\src\\redux\\action-type.js",[],{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":5,"column":31,"nodeType":"209","messageId":"210","endLine":5,"endColumn":38},{"ruleId":"203","replacedBy":"211"},{"ruleId":"205","replacedBy":"212"},{"ruleId":"203","replacedBy":"213"},{"ruleId":"205","replacedBy":"214"},{"ruleId":"215","severity":1,"message":"216","line":2,"column":1,"nodeType":"217","endLine":4,"endColumn":2},{"ruleId":"215","severity":1,"message":"216","line":5,"column":1,"nodeType":"217","endLine":15,"endColumn":2},{"ruleId":"203","replacedBy":"218"},{"ruleId":"205","replacedBy":"219"},{"ruleId":"207","severity":1,"message":"220","line":9,"column":8,"nodeType":"209","messageId":"210","endLine":9,"endColumn":19},{"ruleId":"207","severity":1,"message":"220","line":9,"column":8,"nodeType":"209","messageId":"210","endLine":9,"endColumn":19},{"ruleId":"207","severity":1,"message":"221","line":10,"column":8,"nodeType":"209","messageId":"210","endLine":10,"endColumn":20},{"ruleId":"203","replacedBy":"222"},{"ruleId":"205","replacedBy":"223"},{"ruleId":"203","replacedBy":"224"},{"ruleId":"205","replacedBy":"225"},{"ruleId":"203","replacedBy":"226"},{"ruleId":"205","replacedBy":"227"},{"ruleId":"228","severity":1,"message":"229","line":169,"column":41,"nodeType":"230","messageId":"231","endLine":169,"endColumn":56},{"ruleId":"203","replacedBy":"232"},{"ruleId":"205","replacedBy":"233"},{"ruleId":"203","replacedBy":"234"},{"ruleId":"205","replacedBy":"235"},{"ruleId":"203","replacedBy":"236"},{"ruleId":"205","replacedBy":"237"},{"ruleId":"228","severity":1,"message":"229","line":50,"column":23,"nodeType":"230","messageId":"231","endLine":50,"endColumn":38},{"ruleId":"228","severity":1,"message":"229","line":51,"column":29,"nodeType":"230","messageId":"231","endLine":51,"endColumn":48},{"ruleId":"203","replacedBy":"238"},{"ruleId":"205","replacedBy":"239"},{"ruleId":"207","severity":1,"message":"208","line":7,"column":10,"nodeType":"209","messageId":"210","endLine":7,"endColumn":17},"no-native-reassign",["240"],"no-negated-in-lhs",["241"],"no-unused-vars","'message' is defined but never used.","Identifier","unusedVar",["240"],["241"],["240"],["241"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["240"],["241"],"'memoryUtils' is defined but never used.","'storageUtils' is defined but never used.",["240"],["241"],["240"],["241"],["240"],["241"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression",["240"],["241"],["240"],["241"],["240"],["241"],["240"],["241"],"no-global-assign","no-unsafe-negation"]